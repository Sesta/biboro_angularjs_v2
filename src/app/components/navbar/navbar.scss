.notification li {
    width: 100%;
    background-color: #FBFBEA;
    
    &.read {
        background-color: white;
    }

    > * {
        float: left;
    }

    > .profile {
        width: 20%;
        margin-top: 15px;
    }
    > .description-inner-wrappper:hover {
        cursor: pointer;
    }
    > .description-inner-wrappper {
        width: 80%;

        > .description {
            width: 100%;
            word-break: break-all;
            padding-top: 15px;
            margin-bottom: 15px;
            margin-right: 40px;
            border-top: 1px solid #999999;
            color: #999999;
        }

        > .time {
            float: left;
            height: 30%;
            color: #999999;
            font-size: 13px
        }

        > .tools {
            float: right;

            .tool-item {
                text-decoration: underline;
            }
            .tool-item:hover {
                cursor: hand;
            }
        }
    }

}

.dnd-dialog {

    /**
     * For the correct positioning of the placeholder element, the dnd-list and
     * it's children must have position: relative
     */
    ul[dnd-list],
    ul[dnd-list] > li {
        position: relative;
    }

    /**
     * The dnd-list should always have a min-height,
     * otherwise you can't drop to it once it's empty
     */
    ul[dnd-list] {
        min-height: 42px;
        padding-left: 0px;
    }

    /**
     * The dndDraggingSource class will be applied to
     * the source element of a drag operation. It makes
     * sense to hide it to give the user the feeling
     * that he's actually moving it.
     */
    ul[dnd-list] .dndDraggingSource {
        display: none;
    }

    /**
     * An element with .dndPlaceholder class will be
     * added to the dnd-list while the user is dragging
     * over it.
     */
    ul[dnd-list] .dndPlaceholder {
        display: block;
        background-color: #ddd;
        min-height: 42px;
    }

    /**
     * The dnd-lists's child elements currently MUST have
     * position: relative. Otherwise we can not determine
     * whether the mouse pointer is in the upper or lower
     * half of the element we are dragging over. In other
     * browsers we can use event.offsetY for this.
     */
    ul[dnd-list] li {
        background-color: #fff;
        border: 1px solid #ddd;
        border-top-right-radius: 4px;
        border-top-left-radius: 4px;
        display: block;
        padding: 10px 15px;
        margin-bottom: -1px;
    }

    /**
     * Show selected elements in green
     */
    ul[dnd-list] li.selected {
        background-color: #dff0d8;
        color: #3c763d;
    }
}
